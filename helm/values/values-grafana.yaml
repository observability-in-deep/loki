# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

global:
  imageRegistry: ""
  imagePullSecrets: []
  defaultStorageClass: ""
  security:
    allowInsecureImages: false
  compatibility:
    openshift:
      adaptSecurityContext: auto

kubeVersion: ""
extraDeploy: []
nameOverride: ""
fullnameOverride: ""
clusterDomain: cluster.local
commonLabels: {}
commonAnnotations: {}

image:
  registry: docker.io
  repository: bitnami/grafana
  tag: 11.4.0-debian-12-r1
  pullPolicy: IfNotPresent
  pullSecrets: []

admin:
  user: "admin"
  password: ""
  existingSecret: ""
  existingSecretPasswordKey: password

grafana:
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
  containerPorts:
    grafana: 3000
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  resourcesPreset: "nano"
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    path: /api/health
    scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    enabled: false
    path: /api/health
    scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

persistence:
  enabled: true
  storageClass: ""
  annotations: {}
  existingClaim: ""
  accessMode: ReadWriteOnce
  size: 10Gi

serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: false

service:
  type: ClusterIP
  ports:
    grafana: 3000
  annotations: {}
  externalTrafficPolicy: Cluster
  sessionAffinity: None

networkPolicy:
  enabled: true
  allowExternal: true
  allowExternalEgress: true
  addExternalClientAccess: true
  extraIngress: []
  extraEgress: []

ingress:
  enabled: false
  pathType: ImplementationSpecific
  hostname: grafana.local
  path: /
  annotations: {}
  tls: false
  extraHosts: []
  extraPaths: []
  extraTls: []
  secrets: []
  selfSigned: false
  ingressClassName: ""
  extraRules: []

metrics:
  enabled: false
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "3000"
      prometheus.io/path: "/metrics"
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: ""
    scrapeTimeout: ""
    selector: {}
    relabelings: []
    metricRelabelings: []
    honorLabels: false
    labels: {}
    jobLabel: ""
  prometheusRule:
    enabled: false
    namespace: ""
    additionalLabels: {}
    rules: []

volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/os-shell
    tag: 12-debian-12-r35
    pullPolicy: IfNotPresent
    pullSecrets: []
  resourcesPreset: "nano"
  resources: {}
  containerSecurityContext:
    runAsUser: 0

diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity

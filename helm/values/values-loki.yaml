# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

global:
  imageRegistry: ""
  imagePullSecrets: []
  defaultStorageClass: ""
  storageClass: ""
  security:
    allowInsecureImages: false
  compatibility:
    openshift:
      adaptSecurityContext: auto

kubeVersion: ""
nameOverride: ""
fullnameOverride: ""
commonLabels: {}
commonAnnotations: {}
clusterDomain: cluster.local
extraDeploy: []
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity

loki:
  image:
    registry: docker.io
    repository: bitnami/grafana-loki
    tag: 3.3.2-debian-12-r1
    pullPolicy: IfNotPresent
    pullSecrets: []
  configuration: |
    auth_enabled: false
    server:
      http_listen_port: {{ .Values.loki.containerPorts.http }}
      grpc_listen_port: {{ .Values.loki.containerPorts.grpc }}
    common:
      compactor_address: http://{{ include "grafana-loki.compactor.fullname" . }}:{{ .Values.compactor.service.ports.http }}
    distributor:
      ring:
        kvstore:
          store: memberlist
    memberlist:
      join_members:
        - {{ include "grafana-loki.gossip-ring.fullname" . }}
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      chunk_idle_period: 30m
      chunk_block_size: 262144
      chunk_encoding: snappy
      chunk_retain_period: 1m
      wal:
        dir: {{ .Values.loki.dataDir }}/wal
    limits_config:
      retention_period: 336h
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      allow_structured_metadata: true
    schema_config:
      configs:
      - from: 2020-10-24
        store: boltdb-shipper
        object_store: filesystem
        schema: v11
        index:
          prefix: index_
          period: 24h
      - from: 2024-03-12
        store: tsdb
        object_store: filesystem
        schema: v12
        index:
          period: 24h
          prefix: index_
      - from: 2024-04-23
        object_store: filesystem
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: {{ .Values.loki.dataDir }}/loki/index
        cache_location: {{ .Values.loki.dataDir }}/loki/cache
        cache_ttl: 168h
      filesystem:
        directory: {{ .Values.loki.dataDir }}/chunks
      tsdb_shipper:
        active_index_directory: {{ .Values.loki.dataDir }}/loki/tsdb-index
        cache_location: {{ .Values.loki.dataDir }}/loki/tsdb-cache
    query_scheduler:
      max_outstanding_requests_per_tenant: 32768
    querier:
      max_concurrent: 16
    chunk_store_config:
      chunk_cache_config:
        memcached:
          batch_size: 100
          parallelism: 100
        memcached_client:
          consistent_hash: true
          addresses: dns+{{ include "grafana-loki.memcached-chunks.host" . }}
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
    query_range:
      align_queries_with_step: true
      max_retries: 5
      cache_results: true
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 4096
            ttl: 24h
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
      tail_proxy_url: http://{{ include "grafana-loki.querier.fullname" . }}:{{ .Values.querier.service.ports.http }}
    compactor:
      working_directory: {{ .Values.loki.dataDir }}/loki/retention
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
      delete_request_store: filesystem
    ruler:
      storage:
        type: local
        local:
          directory: {{ .Values.loki.dataDir }}/conf/rules
      ring:
        kvstore:
          store: memberlist
      rule_path: /tmp/loki/scratch
      alertmanager_url: https://alertmanager.xx
      external_url: https://alertmanager.xx
  overrideConfiguration: {}
  existingConfigmap: ""
  dataDir: "/bitnami/grafana-loki"
  containerPorts:
    http: 3100
    grpc: 9095
    gossipRing: 7946

compactor:
  enabled: true
  replicaCount: 1
  resourcesPreset: "nano"
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 8Gi

gateway:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/nginx
    tag: 1.27.3-debian-12-r5
    pullPolicy: IfNotPresent
  replicaCount: 1
  containerPorts:
    http: 8080
  resourcesPreset: "nano"
  service:
    type: ClusterIP
    ports:
      http: 80

distributor:
  replicaCount: 1
  resourcesPreset: "nano"
  service:
    type: ClusterIP
    ports:
      http: 3100
      grpc: 9095

ingester:
  replicaCount: 1
  resourcesPreset: "micro"
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  service:
    type: ClusterIP
    ports:
      http: 3100
      grpc: 9095

querier:
  replicaCount: 1
  resourcesPreset: "nano"
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  service:
    type: ClusterIP
    ports:
      http: 3100
      grpc: 9095

queryFrontend:
  replicaCount: 1
  resourcesPreset: "nano"
  service:
    type: ClusterIP
    ports:
      http: 3100
      grpc: 9095

promtail:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/promtail
    tag: 3.3.2-debian-12-r0
    pullPolicy: IfNotPresent
  containerPorts:
    http: 8080
    grpc: 9095
  resourcesPreset: "nano"
  configuration: |
    server:
      log_level: {{ .Values.promtail.logLevel }}
      http_listen_port: {{ .Values.promtail.containerPorts.http }}
      grpc_listen_port: {{ .Values.promtail.containerPorts.grpc }}
    clients:
      - url: http://{{ include "grafana-loki.gateway.fullname" . }}:{{ .Values.gateway.service.ports.http }}/loki/api/v1/push
    positions:
      filename: /run/promtail/positions.yaml
    scrape_configs:
      - job_name: kubernetes-pods
        pipeline_stages:
          - cri: {}
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
            target_label: __path__
  logLevel: info
  service:
    type: ClusterIP
    ports:
      http: 3100
      grpc: 9095

serviceAccount:
  create: true
  automountServiceAccountToken: false

metrics:
  enabled: false

memcachedchunks:
  enabled: true
  resourcesPreset: "nano"

memcachedfrontend:
  enabled: true
  resourcesPreset: "nano"
